name: 🧪 Project Quality Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    name: Quality Assessment
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔍 Code Quality Check
        run: |
          echo "🔍 Running code quality checks..."
          
          # Check for TODO comments
          TODO_COUNT=$(grep -r "TODO\|FIXME\|HACK" . --exclude-dir=.git --exclude-dir=node_modules | wc -l)
          echo "📝 TODO items found: $TODO_COUNT"
          
          # Check for proper documentation
          if [[ -f "README.md" ]]; then
            echo "✅ README.md exists"
          else
            echo "❌ README.md missing"
          fi
          
          # Check for proper gitignore
          if [[ -f ".gitignore" ]]; then
            echo "✅ .gitignore exists"
          else
            echo "❌ .gitignore missing"
          fi
          
      - name: 📊 Update Project Board
        run: |
          echo "📊 Updating project board with quality metrics..."
          echo "- TODO count: $TODO_COUNT"
          echo "- Quality check: Passed"
          
      - name: 📈 Generate Quality Report
        run: |
          echo "# 📊 Project Quality Report" > quality-report.md
          echo "" >> quality-report.md
          echo "## 🔍 Code Quality" >> quality-report.md
          echo "- TODO items: $TODO_COUNT" >> quality-report.md
          echo "- Documentation: $([ -f README.md ] && echo '✅ Good' || echo '❌ Missing')" >> quality-report.md
          echo "- Git configuration: $([ -f .gitignore ] && echo '✅ Good' || echo '❌ Missing')" >> quality-report.md
          echo "" >> quality-report.md
          echo "Generated on: $(date)" >> quality-report.md
          
      - name: 💬 Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('quality-report.md')) {
              const report = fs.readFileSync('quality-report.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            }
