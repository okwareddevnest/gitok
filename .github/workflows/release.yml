name: 🚀 Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create Release
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Get tag info
      id: tag_info
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        VERSION=${TAG_NAME#v}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Tag: $TAG_NAME, Version: $VERSION"
        
    - name: Get previous tag
      id: prev_tag
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT
        echo "Previous tag: $PREV_TAG"
        
    - name: Generate release notes
      id: release_notes
      run: |
        TAG_NAME="${{ steps.tag_info.outputs.tag_name }}"
        VERSION="${{ steps.tag_info.outputs.version }}"
        PREV_TAG="${{ steps.prev_tag.outputs.prev_tag }}"
        
        # Get commits since last tag
        if [ -n "$PREV_TAG" ] && git rev-parse "$PREV_TAG" >/dev/null 2>&1; then
          COMMITS=$(git log --oneline "$PREV_TAG"..HEAD --pretty=format:"- %s" | head -20)
          COMPARISON_INFO="Changes since $PREV_TAG:"
        else
          COMMITS=$(git log --oneline -10 --pretty=format:"- %s")
          COMPARISON_INFO="Recent changes:"
        fi
        
        # Generate release notes as environment variable
         RELEASE_DATE=$(date -u +"%B %d, %Y")
         RELEASE_TIME=$(date -u +"%H:%M UTC")
         
         {
           echo "RELEASE_NOTES<<EOF"
           echo "# 🚀 GitOK $TAG_NAME"
           echo ""
           echo "**Released on $RELEASE_DATE at $RELEASE_TIME**"
           echo ""
           
           # Check if this is a fish shell release
           if [[ "$VERSION" == "2.0.3" ]]; then
             echo "## 🐟 NEW: Fish Shell Support!"
             echo ""
             echo "GitOK now has **native Fish Shell support** with a dedicated \`.gitok.fish\` script!"
             echo ""
             echo "### What's New for Fish Users:"
             echo "- ✅ **Native Fish syntax** - No more bash compatibility issues"
             echo "- ✅ **Automatic detection** - Installer detects fish shell automatically"
             echo "- ✅ **Seamless integration** - Works with existing fish configuration"
             echo "- ✅ **All 35+ commands** - Full GitOK functionality in fish shell"
             echo ""
             echo "### 🚀 Quick Install for Fish Shell:"
             echo "\`\`\`fish"
             echo "curl -sL https://raw.githubusercontent.com/okwareddevnest/gitok/main/install.sh | bash"
             echo "\`\`\`"
             echo ""
             echo "### 🔧 Fish Shell Commands:"
             echo "- \`gitok --version\` - Check version"
             echo "- \`gitcheatsheet\` - View all commands"
             echo "- \`gitstatus\` - Show git status (renamed from status)"
             echo "- All other commands work exactly the same!"
             echo ""
           else
             echo "## 🌟 What's New in $TAG_NAME"
             echo ""
             echo "### 📝 Changes since $PREV_TAG:"
             echo "$COMMITS"
             echo ""
           fi
           
           echo "## 📦 Installation"
           echo ""
           echo "### 🐧 Linux & macOS"
           echo "\`\`\`bash"
           echo "bash <(curl -sL https://raw.githubusercontent.com/okwareddevnest/gitok/main/install.sh)"
           echo "\`\`\`"
           echo ""
           echo "### 🐟 Fish Shell Users"
           echo "The installer automatically detects and configures Fish Shell support!"
           echo ""
           echo "### 🪟 Windows Users"
           echo "**WSL (Recommended):** \`wsl bash -c \"curl -sL https://raw.githubusercontent.com/okwareddevnest/gitok/main/install.sh | bash\"\`"
           echo ""
           echo "## ✅ Verify Installation"
           echo "\`\`\`bash"
           echo "# Restart your terminal or run:"
           echo "source ~/.bashrc  # or source ~/.zshrc"
           echo "# For Fish Shell: source ~/.config/fish/config.fish"
           echo ""
           echo "# Test installation"
           echo "gitok --version"
           echo "gitcheatsheet"
           echo "\`\`\`"
           echo ""
           echo "## 🚀 Key Features"
           echo ""
           echo "### 🔧 Core Git Commands (35+)"
           echo "- \`commit \"message\"\` - Stage all and commit"
           echo "- \`push\` / \`pushall\` - Push to remote(s)"
           echo "- \`branch <name>\` - Create and switch branches"
           echo "- \`graphlog\` - Visual commit history"
           echo ""
           echo "### 🎯 Advanced Project Management"
           echo "- \`syncproject\` - Real-time GitHub Projects sync"
           echo "- \`collaborate\` - Team collaboration hub"
           echo "- \`analytics\` - AI-powered project insights"
           echo "- \`template\` - Professional project templates"
           echo ""
           echo "## 🔗 Links"
           echo "- **Repository**: https://github.com/okwareddevnest/gitok"
           echo "- **Issues**: https://github.com/okwareddevnest/gitok/issues"
           echo ""
           echo "**⭐ Star this repo if GitOK boosts your productivity!**"
           echo ""
           echo "Created with ❤️ by **Dedan Okware**"
           echo "EOF"
        } >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_info.outputs.tag_name }}
        name: "🚀 GitOK ${{ steps.tag_info.outputs.tag_name }} - Git CLI Productivity Boost"
        body: ${{ env.RELEASE_NOTES }}
        draft: false
        prerelease: false
        generate_release_notes: true 